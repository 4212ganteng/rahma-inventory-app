datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-1.1.x", "rhel-openssl-3.0.x"]
}

enum Role {
  SALESPERSON
  MASTERSUHU
}

enum Progress {
  INITIAL
  INPROGRESS
  COMPLETED
}

// Enum untuk status transaksi
enum TransactionStatus {
  PENDING
  COMPLETED
  CANCELLED
}

// Enum untuk status stok
enum StockStatus {
  TERSEDIA
  HAMPIR_HABIS
  KADALUWARSA
  KOSONG
}

// enum status
enum StatusActive {
  Active
  Inactive
}

enum ChangeType {
  PENAMBAHAN
  PENGURANGAN
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String
  role          Role      @default(SALESPERSON)
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Satuan produk (pcs, kg, liter)
model Unit {
  id           String       @id @default(cuid())
  unit         String
  isDeleted    Boolean      @default(false)
  products     Product[]
  description  String?
  statusActive StatusActive
}

model Category {
  id           String       @id @default(cuid())
  category     String
  isDeleted    Boolean      @default(false)
  products     Product[]
  description  String?
  statusActive StatusActive
}

// Model Produk
model Product {
  id                String           @id @default(cuid())
  name              String           @unique
  sku               String           @unique
  description       String?
  categoryId        String
  category          Category         @relation(fields: [categoryId], references: [id])
  unitId            String
  unit              Unit             @relation(fields: [unitId], references: [id])
  minStockThreshold Int              @default(10)
  image             String?
  inventoryEntries  InventoryEntry[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Entri Inventori dengan tracking FIFO
model InventoryEntry {
  id        String  @id @default(cuid())
  productId String
  product   Product @relation(fields: [productId], references: [id])

  batchNumber       String @unique
  quantity          Float
  remainingQuantity Float

  entryDate  DateTime @default(now())
  expiryDate DateTime

  status StockStatus @default(TERSEDIA)

  // Metode tracking FIFO
  fifoSequence Int // Urutan masuk untuk FIFO

  // Logging perubahan stok
  stockChanges StockChange[]
}

// Catatan Perubahan Stok
model StockChange {
  id               String         @id @default(cuid())
  inventoryEntryId String
  inventoryEntry   InventoryEntry @relation(fields: [inventoryEntryId], references: [id])

  changeType  String // "PENAMBAHAN", "PENGURANGAN"
  quantity    Float
  changeDate  DateTime @default(now())
  description String?

  waybill Waybill[]

  userId String? // Optional: untuk tracking siapa yang melakukan perubahan
}

//  waybill
model Waybill {
  id            String      @id @default(cuid())
  stockChangeId String
  stockChange   StockChange @relation(fields: [stockChangeId], references: [id])
  waybillNumber String
  waybillDate   DateTime
  status        ChangeType  @default(PENAMBAHAN)
}
